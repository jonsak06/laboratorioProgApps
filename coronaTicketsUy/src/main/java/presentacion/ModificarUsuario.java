/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.awt.Image;
import java.util.*;
import java.io.Serializable;
import java.sql.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tecnologo
 */
public class ModificarUsuario extends javax.swing.JFrame {
    private List<DtEspectador> espectadores=new ArrayList<DtEspectador>();
    private List<DtArtista> artistas=new ArrayList<DtArtista>();
    String ruta="";
    /**
     * Creates new form ModificarUsuario
     */
    public ModificarUsuario() {
        initComponents();
        List<String> nicknames = new ArrayList<String>();
        ruta="silueta.jpg";
        Image mImagen = new ImageIcon(ruta).getImage();
        ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
        lImagen.setIcon(mIcono);
        tfNombre.setEnabled(true);
        tfApellido.setEnabled(true);
        tfCorreoElectronico.setEnabled(true);
        tfDescripcion.setEnabled(false);
        tfBiografia.setEnabled(false);
        tfLinkWeb.setEnabled(false);
        espectadores=Fabrica.getCrlUsuarios().getEspectadores();
        for (int i=0; i<espectadores.size(); i++)
        {
            nicknames.add(espectadores.get(i).getNickname());
        }
        tfNombre.setText(espectadores.get(0).getNombre());
        tfNickname.setText(espectadores.get(0).getNickname());
        tfApellido.setText(espectadores.get(0).getApellido());
        tfCorreoElectronico.setText(espectadores.get(0).getCorreo());
        this.cbUsuario.setModel(new DefaultComboBoxModel(nicknames.toArray()));
        ruta=espectadores.get(0).getImagen();
        if(espectadores.get(0).getImagen()!="")
        {
            mImagen = new ImageIcon(espectadores.get(0).getImagen()).getImage();
            mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
            lImagen.setIcon(mIcono);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfDescripcion = new javax.swing.JTextField();
        tfLinkWeb = new javax.swing.JTextField();
        tfApellido = new javax.swing.JTextField();
        tfNickname = new javax.swing.JTextField();
        tfCorreoElectronico = new javax.swing.JTextField();
        cbTipoUsuario = new javax.swing.JComboBox<>();
        lbTipoUsuario = new javax.swing.JLabel();
        lbFechaNacimiento1 = new javax.swing.JLabel();
        lbFechaNacimiento2 = new javax.swing.JLabel();
        btCancelar = new javax.swing.JButton();
        btModificar = new javax.swing.JButton();
        btImagen = new javax.swing.JButton();
        lbNombre = new javax.swing.JLabel();
        lbApellido = new javax.swing.JLabel();
        lbCorreoElectronico = new javax.swing.JLabel();
        lbNickname = new javax.swing.JLabel();
        lbLinkWeb = new javax.swing.JLabel();
        lbTitulo = new javax.swing.JLabel();
        tfBiografia = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbUsuario = new javax.swing.JComboBox<>();
        tfNombre = new javax.swing.JTextField();
        lImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfDescripcion.setEnabled(false);

        tfLinkWeb.setEnabled(false);

        tfApellido.setEnabled(false);
        tfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfApellidoActionPerformed(evt);
            }
        });

        tfNickname.setEnabled(false);

        tfCorreoElectronico.setEnabled(false);

        cbTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Espectador", "Artista" }));
        cbTipoUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoUsuarioItemStateChanged(evt);
            }
        });
        cbTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoUsuarioActionPerformed(evt);
            }
        });

        lbTipoUsuario.setText("Tipo de usuario:");

        lbFechaNacimiento1.setText("Brebe biografia:");

        lbFechaNacimiento2.setText("Descripcion general:");

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btModificar.setText("Modificar");
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        btImagen.setText("Imagen");
        btImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImagenActionPerformed(evt);
            }
        });

        lbNombre.setText("Nombre:");

        lbApellido.setText("Apellido:");

        lbCorreoElectronico.setText("Correo electr√≥nico:");

        lbNickname.setText("Nickname:");

        lbLinkWeb.setText("Link sitio web:");

        lbTitulo.setText("Elija el tipo de usuario");

        tfBiografia.setEnabled(false);

        jLabel1.setText("Usuario:");

        cbUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUsuarioItemStateChanged(evt);
            }
        });

        tfNombre.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbTitulo)
                .addGap(141, 141, 141))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btModificar)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFechaNacimiento1)
                        .addGap(48, 48, 48)
                        .addComponent(tfBiografia))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbLinkWeb)
                        .addGap(62, 62, 62)
                        .addComponent(tfLinkWeb))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNombre)
                            .addComponent(lbTipoUsuario)
                            .addComponent(lbNickname)
                            .addComponent(lbApellido)
                            .addComponent(lbCorreoElectronico)
                            .addComponent(lbFechaNacimiento2)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfApellido)
                                    .addComponent(tfNickname)
                                    .addComponent(tfCorreoElectronico)
                                    .addComponent(cbTipoUsuario, 0, 248, Short.MAX_VALUE)
                                    .addComponent(tfDescripcion, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNombre))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btImagen)
                        .addGap(81, 81, 81)
                        .addComponent(lImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbTitulo)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTipoUsuario))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbApellido)
                    .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNickname)
                    .addComponent(tfNickname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCorreoElectronico)
                    .addComponent(tfCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFechaNacimiento2)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFechaNacimiento1)
                    .addComponent(tfBiografia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbLinkWeb)
                    .addComponent(tfLinkWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(btImagen)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btModificar)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoUsuarioItemStateChanged
        // TODO add your handling code here:
        List<String> nicknames = new ArrayList<String>();
        if( cbTipoUsuario.getSelectedItem().toString()=="Artista")
        {
            tfNombre.setText("");
            tfApellido.setText("");
            tfCorreoElectronico.setText("");
            tfNickname.setText("");
            tfLinkWeb.setText("");
            tfBiografia.setText(""); 
            tfDescripcion.setText("");
            tfNombre.setEnabled(true);
            tfApellido.setEnabled(true);
            tfCorreoElectronico.setEnabled(true);
            tfDescripcion.setEnabled(true);
            tfBiografia.setEnabled(true);
            tfLinkWeb.setEnabled(true);
            lbTitulo.setText("Ingrese los datos del artista");
            
            artistas=Fabrica.getCrlUsuarios().getArtistas();
            for (int i=0; i<artistas.size(); i++)
            {
                nicknames.add(artistas.get(i).getNickname());
            }
            tfNombre.setText(artistas.get(0).getNombre());
            tfNickname.setText(artistas.get(0).getNickname());
            tfApellido.setText(artistas.get(0).getApellido());
            tfCorreoElectronico.setText(artistas.get(0).getCorreo());
            tfDescripcion.setText(artistas.get(0).getDescripcion());
            tfBiografia.setText(artistas.get(0).getBiografia());
            tfLinkWeb.setText(artistas.get(0).getLinkWeb());
            this.cbUsuario.setModel(new DefaultComboBoxModel(nicknames.toArray()));
            ruta=artistas.get(0).getImagen();
            if(artistas.get(0).getImagen()!="")
            {
                Image mImagen = new ImageIcon(artistas.get(0).getImagen()).getImage();
                ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                lImagen.setIcon(mIcono);
            }
            
        }

        if( cbTipoUsuario.getSelectedItem().toString()=="Espectador")
        {
            tfNombre.setEnabled(true);
            tfApellido.setEnabled(true);
            tfCorreoElectronico.setEnabled(true);
            
            tfDescripcion.setEnabled(false);
            tfBiografia.setEnabled(false);
            tfLinkWeb.setEnabled(false);
            lbTitulo.setText("Ingrese los datos del espectador");
            espectadores=Fabrica.getCrlUsuarios().getEspectadores();
            for (int i=0; i<espectadores.size(); i++)
            {
                nicknames.add(espectadores.get(i).getNickname());
            }
            tfNombre.setText(espectadores.get(0).getNombre());
            tfNickname.setText(espectadores.get(0).getNickname());
            tfApellido.setText(espectadores.get(0).getApellido());
            tfCorreoElectronico.setText(espectadores.get(0).getCorreo());
            this.cbUsuario.setModel(new DefaultComboBoxModel(nicknames.toArray()));
            ruta=espectadores.get(0).getImagen();
            if(espectadores.get(0).getImagen()!="PATH")
            {
                if(espectadores.get(0).getImagen()!="")
                {
                    Image mImagen = new ImageIcon(espectadores.get(0).getImagen()).getImage();
                    ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                    lImagen.setIcon(mIcono);
                }
                else
                {
                    ruta="silueta.jpg";
                    Image mImagen = new ImageIcon(ruta).getImage();
                    ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                    lImagen.setIcon(mIcono);
                }
            }
            else
            {
                ruta="silueta.jpg";
                Image mImagen = new ImageIcon(ruta).getImage();
                ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                lImagen.setIcon(mIcono);

            }
        }

    }//GEN-LAST:event_cbTipoUsuarioItemStateChanged

    private void cbTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoUsuarioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbTipoUsuarioActionPerformed

    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
        // TODO add your handling code here:
        
        
       if(tfNickname.getText().isBlank()|| this.tfNickname.getText().length()<1 || this.tfNickname.getText().length()>254) {
            JOptionPane.showMessageDialog(null, "Nickname invalido","Usuarios", JOptionPane.ERROR_MESSAGE);            
        } else if(tfNombre.getText().isBlank()|| this.tfNombre.getText().length()<1 || this.tfNombre.getText().length()>254) {
            JOptionPane.showMessageDialog(null, "Nombre invalido","Usuarios", JOptionPane.ERROR_MESSAGE);            
        } else if(tfApellido.getText().isBlank()|| this.tfApellido.getText().length()<1 || this.tfApellido.getText().length()>254) {
            JOptionPane.showMessageDialog(null, "Apellido invalido","Usuarios", JOptionPane.ERROR_MESSAGE);    
        } else if(this.tfCorreoElectronico.getText().contains(".@")||this.tfCorreoElectronico.getText().contains("@.")||this.tfCorreoElectronico.getText().contains("@")==false ||this.tfCorreoElectronico.getText().contains(" ") || this.tfCorreoElectronico.getText().contains(".")==false || tfCorreoElectronico.getText().isBlank()|| this.tfCorreoElectronico.getText().length()<1 || this.tfCorreoElectronico.getText().length()>254|| this.tfCorreoElectronico.getText().length()==this.tfCorreoElectronico.getText().indexOf(".")|| this.tfCorreoElectronico.getText().indexOf("@")>this.tfCorreoElectronico.getText().indexOf(".")) {
            JOptionPane.showMessageDialog(null, "Correo electronico invalido","Usuarios", JOptionPane.ERROR_MESSAGE);                    
        } else if("Espectador"==cbTipoUsuario.getSelectedItem().toString())
        {
            for (int i=0; i<espectadores.size(); i++)
            {
                if(cbUsuario.getSelectedItem().toString()==espectadores.get(i).getNickname())
                {
                    DtEspectador es = new DtEspectador(espectadores.get(i).getCanjeables(), espectadores.get(i).getId(), tfNombre.getText(), tfApellido.getText(), tfCorreoElectronico.getText(), tfNickname.getText(), ruta, espectadores.get(i).getFechaNacimiento());
                    Fabrica.getCrlUsuarios().modificarEspectador(es);
                    JOptionPane.showMessageDialog(null, "El espectador fue modificado", "Usuarios", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            }
        }
            
        if(tfLinkWeb.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Ingrese un link web","Usuarios", JOptionPane.ERROR_MESSAGE);            
        }else if(this.tfLinkWeb.getText().contains(" ") || this.tfLinkWeb.getText().contains(".")==false || this.tfLinkWeb.getText().length()<1 || this.tfLinkWeb.getText().length()>254){
            JOptionPane.showMessageDialog(null, "URL invalida", "ERROR!", JOptionPane.DEFAULT_OPTION);
        } else if(tfDescripcion.getText().isBlank()|| this.tfDescripcion.getText().length()<1 || this.tfDescripcion.getText().length()>254) {
            JOptionPane.showMessageDialog(null, "Descripcion invalida","Usuarios", JOptionPane.ERROR_MESSAGE);            
        } else if(tfBiografia.getText().isBlank()|| this.tfBiografia.getText().length()<1 || this.tfBiografia.getText().length()>254) {
            JOptionPane.showMessageDialog(null, "Biografia invalida","Usuarios", JOptionPane.ERROR_MESSAGE);    
        } else if ("Artista"==cbTipoUsuario.getSelectedItem().toString())
        {
            for (int i=0; i<artistas.size(); i++)
            {
                if(cbUsuario.getSelectedItem().toString()==artistas.get(i).getNickname())
                {
                    DtArtista ar = new DtArtista(tfLinkWeb.getText(), tfBiografia.getText(), tfDescripcion.getText(), artistas.get(i).getId(), tfNombre.getText(), tfApellido.getText(), tfCorreoElectronico.getText(), tfNickname.getText(), ruta, artistas.get(i).getFechaNacimiento());
                    Fabrica.getCrlUsuarios().modificarArtista(ar);
                    JOptionPane.showMessageDialog(null, "El artista fue modificado", "Usuarios", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            }
        } 
        
        
        
        
    }//GEN-LAST:event_btModificarActionPerformed

    private void cbUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUsuarioItemStateChanged
        // TODO add your handling code here:
        
        if( cbTipoUsuario.getSelectedItem().toString()=="Artista")
        {
            for (int i=0; i<artistas.size(); i++)
            {
                if(cbUsuario.getSelectedItem().toString()==artistas.get(i).getNickname())
                {
                    tfNombre.setText(artistas.get(i).getNombre());
                    tfApellido.setText(artistas.get(i).getApellido());
                    tfNickname.setText(artistas.get(i).getNickname());
                    tfCorreoElectronico.setText(artistas.get(i).getCorreo());
                    tfDescripcion.setText(artistas.get(i).getDescripcion());
                    tfBiografia.setText(artistas.get(i).getBiografia());
                    tfLinkWeb.setText(artistas.get(i).getLinkWeb());
                    ruta=artistas.get(i).getImagen();
                    if(espectadores.get(i).getImagen()!="PATH")
                    {
                        if(espectadores.get(i).getImagen()!="")
                        {
                            Image mImagen = new ImageIcon(espectadores.get(i).getImagen()).getImage();
                            ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                            lImagen.setIcon(mIcono);
                        }
                        else
                        {
                            ruta="silueta.jpg";
                            Image mImagen = new ImageIcon(ruta).getImage();
                            ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                            lImagen.setIcon(mIcono);
                        }
                    }
                    else
                    {
                        ruta="silueta.jpg";
                        Image mImagen = new ImageIcon(ruta).getImage();
                        ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                        lImagen.setIcon(mIcono);

                    }
                    
                    
                }
            }
        }
        
        if( cbTipoUsuario.getSelectedItem().toString()=="Espectador")
        {
            for (int i=0; i<espectadores.size(); i++)
            {
                if(cbUsuario.getSelectedItem().toString()==espectadores.get(i).getNickname())
                {
                    tfNombre.setText(espectadores.get(i).getNombre());
                    tfNickname.setText(espectadores.get(i).getNickname());
                    tfApellido.setText(espectadores.get(i).getApellido());
                    tfCorreoElectronico.setText(espectadores.get(i).getCorreo());
                    ruta=espectadores.get(i).getImagen();
                    if(espectadores.get(i).getImagen()!="PATH")
                    {
                        if(espectadores.get(i).getImagen()!="")
                        {
                            Image mImagen = new ImageIcon(espectadores.get(i).getImagen()).getImage();
                            ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                            lImagen.setIcon(mIcono);
                        }
                        else
                        {
                            ruta="silueta.jpg";
                            Image mImagen = new ImageIcon(ruta).getImage();
                            ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                            lImagen.setIcon(mIcono);
                        }
                    }
                    else
                    {
                        ruta="silueta.jpg";
                        Image mImagen = new ImageIcon(ruta).getImage();
                        ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
                        lImagen.setIcon(mIcono);

                    }
                           
                }
            }
        }

       
    }//GEN-LAST:event_cbUsuarioItemStateChanged

    private void tfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfApellidoActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        Principal ventanaPrincipal = new Principal();
        ventanaPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImagenActionPerformed
        // TODO add your handling code here:
        
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        jFileChooser.setFileFilter(filtrado);
        int respuesta = jFileChooser.showOpenDialog(this);
        if(respuesta==JFileChooser.APPROVE_OPTION)
        {
            ruta=jFileChooser.getSelectedFile().getPath();
            Image mImagen = new ImageIcon(ruta).getImage();
            ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(lImagen.getWidth(), lImagen.getHeight(), Image.SCALE_SMOOTH));
            lImagen.setIcon(mIcono);
        }
    }//GEN-LAST:event_btImagenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btImagen;
    private javax.swing.JButton btModificar;
    private javax.swing.JComboBox<String> cbTipoUsuario;
    private javax.swing.JComboBox<String> cbUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lImagen;
    private javax.swing.JLabel lbApellido;
    private javax.swing.JLabel lbCorreoElectronico;
    private javax.swing.JLabel lbFechaNacimiento1;
    private javax.swing.JLabel lbFechaNacimiento2;
    private javax.swing.JLabel lbLinkWeb;
    private javax.swing.JLabel lbNickname;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbTipoUsuario;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JTextField tfBiografia;
    private javax.swing.JTextField tfCorreoElectronico;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfLinkWeb;
    private javax.swing.JTextField tfNickname;
    private javax.swing.JTextField tfNombre;
    // End of variables declaration//GEN-END:variables
}
